import scipy.stats as stats
import numpy as np
# 1) Известно, что генеральная совокупность распределена нормально
# со средним квадратическим отклонением, равным 16.
# Найти доверительный интервал для оценки математического ожидания a с надежностью 0.95,
# если выборочная средняя M = 80, а объем выборки n = 256.
m_x = 80
n = 256
std_x = 16

(l, u) = (m_x - stats.norm.ppf(0.975) * std_x / n**0.5, m_x + stats.norm.ppf(0.975) * std_x / n**0.5)
print(l, u)

# 2) В результате 10 независимых измерений некоторой величины X, выполненных с одинаковой точностью,
# получены опытные данные:
# 6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1
# Предполагая, что результаты измерений подчинены нормальному закону распределения вероятностей,
# оценить истинное значение величины X при помощи доверительного интервала, покрывающего это
# значение с доверительной вероятностью 0,95.
x = [6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1]
m_x = np.mean(x)
s = np.std(x, ddof=1)

(l, u) = (m_x - stats.t.ppf(0.975, len(x) - 1) * s / len(x)**0.5, m_x + stats.t.ppf(0.975, len(x) - 1) * s / len(x)**0.5)
print(l, u)

# 3) Рост дочерей 175, 167, 154, 174, 178, 148, 160, 167, 169, 170
# Рост матерей 178, 165, 165, 173, 168, 155, 160, 164, 178, 175
# Используя эти данные построить 95% доверительный интервал для разности среднего роста родителей и детей.
mothers = [178, 165, 165, 173, 168, 155, 160, 164, 178, 175]
daughters = [175, 167, 154, 174, 178, 148, 160, 167, 169, 170]

delta = np.mean(mothers) - np.mean(daughters)
D = (np.var(mothers, ddof=1) + np.var(daughters, ddof=1)) / 2
se = (D / len(mothers) + D / len(daughters))**0.5
(l, u) = (delta - stats.t.ppf(0.975, len(mothers) + len(daughters) - 2) * se, delta + stats.t.ppf(0.975, len(mothers) + len(daughters) - 2) * se)
print(l, u)